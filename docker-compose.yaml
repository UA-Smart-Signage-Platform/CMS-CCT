services:
  postgres_db:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - mqttnet
      
  api:
    build:
      context: ./backend/uasmartsignage
      dockerfile: Dockerfile
    volumes:
      - ./backend/uasmartsignage:/app
      - ./backend/uasmartsignage/.m2:/root/.m2
    working_dir: /app
    command: sh run.sh
    ports:
      - 8080:8080
      - 35729:35729
      - 5005:5005
    depends_on:
      - postgres_db
      - mqtt
    networks:
      - mqttnet
      
  influxdb:
    image: influxdb:2.1.1
    env_file:
      - .env
    volumes:
        - influxdb_data:/var/lib/influxdb
    networks:
        - mqttnet
    ports:
        - ${DOCKER_INFLUXDB_INIT_PORT}:${DOCKER_INFLUXDB_INIT_PORT}
        
  influxdb_cli:
    build: .
    env_file:
      - .env
    links:
      - influxdb
    volumes:
      - ./influxdbv2:/root/.influxdbv2
    entrypoint: ["./docker-entrypoint-initdb.d/entrypoint.sh"]
    restart: on-failure:10
    depends_on:
      - influxdb
    networks:
      - mqttnet

  mqtt:
    image: eclipse-mosquitto:1.6.13
    volumes:
        - mosquitto_conf:/mosquitto/config 
        - mosquitto_data:/mosquitto/data
        - mosquitto_log:/mosquitto/log
    networks:
        - mqttnet
    ports:
        - 9001:9001
        - 1883:1883

  frontend:
      depends_on:
          - postgres_db
          - api
          - mqtt
      build:
        context: ./frontend
        dockerfile: .docker/Dockerfile
      restart: unless-stopped
      volumes:
        - "./frontend/:/app"
      ports:
        - 3000:3000
      command: >
        bash -c "cp -rfu /cache/node_modules/. /app/node_modules/  
        && npm start"

volumes:
    mosquitto_conf:
    mosquitto_data:
    mosquitto_log:
    influxdb_data:

networks:
  mqttnet:
    driver: bridge
